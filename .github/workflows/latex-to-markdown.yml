#!/bin/bash

echo "üìö Converting LaTeX files to Markdown..."

# Function to clean up LaTeX artifacts
clean_markdown() {
    local file="$1"
    
    # Remove escaped backslashes from headers
    sed -i 's/\\#/#/g' "$file"
    sed -i 's/\\\*/*/g' "$file"
    sed -i 's/\\_/_/g' "$file"
    
    # Remove any lines that start with # (all headers)
    sed -i '/^#.*$/d' "$file"
    
    # Remove footnote references and content
    sed -i 's/\[^[0-9]*\]//g' "$file"
    sed -i '/^\[^[0-9]*\]:/d' "$file"
    
    # Fix appendix references - remove links, just keep numbers
    sed -i 's/\[Appendix \([A-Z0-9]\)\]([^)]*)/Appendix \1/g' "$file"
    sed -i 's/\[Appendix \([A-Z0-9]\)\]/Appendix \1/g' "$file"
    
    # Clean up broken table formatting
    # Remove extra escaping from table content
    sed -i 's/\\\$/$/g' "$file"
    sed -i 's/\\,/,/g' "$file"
    
    # Fix table headers that might be broken
    sed -i 's/textbf{/\*\*/g' "$file"
    sed -i 's/}/\*\*/g' "$file"
    
    # Fix double spaces and improve paragraph spacing
    sed -i 's/  \+/ /g' "$file"
    sed -i 's/\n\n\n\+/\n\n/g' "$file"
    
    # Remove leading/trailing whitespace
    sed -i 's/^[[:space:]]*//' "$file"
    sed -i 's/[[:space:]]*$//' "$file"
    
    # Fix common table formatting issues
    # Convert remaining LaTeX table commands
    sed -i 's/\\hline//g' "$file"
    sed -i 's/\\multicolumn{[^}]*}{[^}]*}{/\*\*/g' "$file"
    sed -i 's/\\textbf{/\*\*/g' "$file"
    
    # Clean up any remaining LaTeX commands
    sed -i 's/\\begin{[^}]*}//g' "$file"
    sed -i 's/\\end{[^}]*}//g' "$file"
    sed -i 's/\\center//g' "$file"
    sed -i 's/\\centering//g' "$file"
}

# Function to preprocess LaTeX files for better table conversion
preprocess_latex() {
    local file="$1"
    local temp_file="${file}.tmp"
    
    # Create a temporary file with preprocessing
    cp "$file" "$temp_file"
    
    # Convert LaTeX tables to a more Pandoc-friendly format
    # This is a simple approach - you might need to adjust for complex tables
    sed -i 's/\\begin{center}//' "$temp_file"
    sed -i 's/\\end{center}//' "$temp_file"
    sed -i 's/\\begin{tabular}{[^}]*}//' "$temp_file"
    sed -i 's/\\end{tabular}//' "$temp_file"
    
    # Convert table rows to pipe format for better Pandoc handling
    # This is a basic conversion - you might need to enhance this
    
    echo "$temp_file"
}

# Create output directory
mkdir -p output

# Find all .tex files (excluding Full Doc.tex and title.tex)
find . -name "*.tex" -not -name "Full Doc.tex" -not -name "title.tex" | while read -r tex_file; do
    echo "üîÑ Processing: $tex_file"

    # Get base name without .tex extension
    base_name=$(basename "$tex_file" .tex)
    
    # Preprocess the LaTeX file
    temp_file=$(preprocess_latex "$tex_file")
    
    # Convert to markdown using improved pandoc options with better table handling
    pandoc -f latex -t gfm \
           --wrap=auto \
           --columns=120 \
           --markdown-headings=atx \
           --standalone \
           --preserve-tabs \
           "$temp_file" -o "output/${base_name}.md"
    
    if [ $? -eq 0 ]; then
        # Clean up the generated markdown
        clean_markdown "output/${base_name}.md"
        
        # Additional table cleanup specific to the Abstract file
        if [ "$base_name" = "1_Abstract" ]; then
            # Fix the specific table in Abstract
            sed -i 's/|.*Transaction Costs.*|/| **Transaction Costs, $** ||||/' "output/${base_name}.md"
            sed -i 's/|.*Paid By.*Description.*Centralized.*Decentralized.*/| **Paid By** | **Description** | **Centralized** | **Decentralized** |/' "output/${base_name}.md"
        fi
        
        # Remove the temporary file
        rm -f "$temp_file"

        echo "‚úÖ Created: output/${base_name}.md"
    else
        echo "‚ùå Failed to convert: $tex_file"
        rm -f "$temp_file"
    fi
done

echo "üéâ Conversion complete! Check the output/ directory for Markdown files."
echo ""
echo "üìù Note: Tables may need manual adjustment. Check the Abstract file particularly."
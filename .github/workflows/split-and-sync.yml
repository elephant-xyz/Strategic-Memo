name: Convert LaTeX to Markdown and Sync

on:
  push:
    paths:
      - '**.tex'
  workflow_dispatch:

jobs:
  convert:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Pandoc
        run: sudo apt-get update && sudo apt-get install -y pandoc

      - name: Clean previous Markdown output
        run: rm -rf output && mkdir -p output

      - name: Select preferred TeX files (prefer *_v2)
        id: find-tex
        run: |
          files=$(find . -name "*.tex")
          declare -A base_map
          for f in $files; do
            base=$(basename "$f" .tex | sed 's/_v2$//')
            [[ "${base_map[$base]}" =~ _v2\.tex$ ]] || base_map["$base"]="$f"
          done
          printf "%s\n" "${base_map[@]}" > tex_list.txt

      - name: Validate TeX list
        run: |
          if [[ ! -s tex_list.txt ]]; then
            echo "❌ No TeX files found"
            exit 1
          fi
          echo "✅ TeX files:" && cat tex_list.txt

      - name: Convert to Markdown
        run: |
          while IFS= read -r tex_file; do
            echo "Processing $tex_file"
            base=$(basename "$tex_file" .tex)

            chapter_title=$(grep -oP '\\chapter\{.*?\}' "$tex_file" | head -1 | sed 's/\\chapter{//;s/}//')
            chapter_title_clean=$(echo "$chapter_title" | tr -cd '[:alnum:] .:\/-' | sed 's/["\\]/ /g')
            slug=$(echo "$chapter_title_clean" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9]/-/g' | sed 's/--*/-/g' | sed 's/^-\|-$//g')

            intro=$(awk '/\\section\{/{exit} {print}' "$tex_file" | sed 's/\\chapter{.*}/# '"$chapter_title_clean"'/')
            
            {
              echo "---"
              echo "title: \"$chapter_title_clean\""
              echo "slug: \"$slug\""
              echo "type: \"chapter\""
              echo "order: 0"
              echo "---"
              echo ""
              echo "$intro" | pandoc -f latex -t markdown_strict
            } > "output/${base}_intro.md"

            awk -v base="$base" -v parent="$slug" '
              BEGIN { RS="\\\\section\\{"; ORS=""; i=1 }
              NR > 1 {
                title_raw = substr($0, 1, index($0,"}")-1)
                gsub(/[^[:alnum:] .:-]/, "", title_raw)
                title = title_raw
                slugified = tolower(title)
                gsub(/[^a-z0-9]+/, "-", slugified)
                gsub(/^-|-$/, "", slugified)
                file="output/" base "_section_" i ".md"

                print "---" > file
                print "title: \"" title "\"" >> file
                print "slug: \"" slugified "\"" >> file
                print "parent_slug: \"" parent "\"" >> file
                print "type: \"section\"" >> file
                print "order: " i >> file
                print "---\n\n## " title "\n" > "temp.tex"
                print substr($0, index($0,"}")+1) > "temp.tex"
                system("pandoc -f latex -t markdown_strict temp.tex >> " file)
                system("rm temp.tex")
                i++
              }
            ' "$tex_file"
          done < tex_list.txt

      - name: Combine all Markdown into Full_Doc.md
        run: |
          echo "Combining into output/Full_Doc.md"
          find output -name '*.md' ! -name 'Full_Doc.md' -exec cat {} + > output/Full_Doc.md

      - name: Commit converted Markdown
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add output/
          git diff --cached --quiet || git commit -m "Update converted Markdown"
          git push

      - name: Debug output if failed
        if: failure()
        run: |
          echo "Directory listing:"
          ls -l output || echo "❌ No output directory"
          cat tex_list.txt || echo "No tex_list.txt"
